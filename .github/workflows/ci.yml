name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'AUTHORS.md'
      - 'LICENSE.md'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'AUTHORS.md'
      - 'LICENSE.md'
      - 'README.md'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ${{ matrix.os }} - ${{ matrix.compiler }} - ${{ matrix.type }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: gfortran-10
            shell: bash
            type: regular
          - os: ubuntu-latest
            compiler: gfortran-10
            shell: bash
            type: valgrind
          - os: macos-latest
            compiler: gfortran-10
            shell: bash
            type: regular
          - os: windows-latest
            compiler: gfortran
            shell: 'msys2 {0}'
            type: regular
          - os: ubuntu-22.04
            compiler: gfortran-11
            shell: bash
            type: regular
          - os: ubuntu-22.04
            compiler: gfortran-11
            shell: bash
            type: valgrind
          - os: macos-12
            compiler: gfortran-11
            shell: bash
            type: regular
    # Set default shell as suggested here: https://github.community/t/setting-default-shell-or-other-step-metadata-conditionally-in-workflows/154055
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # - name: Add msbuild to PATH
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   uses: microsoft/setup-msbuild@v1.0.2
      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          update: true
          install: git base-devel mingw-w64-x86_64-toolchain
      - name: Bootstrap
        run: |
          ./Utilities/bootstrap
      - name: Show version information
        run: |
          ${{ matrix.compiler }} --version
      - name: Build
        run: |
          make -j 2 FC=${{ matrix.compiler }}
      - name: Run tests
        run: |
          ./HOHQMesh -test
      - name: Run memory checks with Valgrind (only Linux)
        if: ${{ matrix.type == 'valgrind' }}
        run: |
          sudo apt-get install -y valgrind
          valgrind --error-exitcode=1 -s ./HOHQMesh -test
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session for debugging
        if: ${{ matrix.os == 'windows-latest' && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && always() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
      - name: Run tests for coverage
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.type == 'regular' }}
        run: |
          sudo apt-get install -y lcov
          FC=${{ matrix.compiler }} ./Utilities/createcoverage
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.type == 'regular' }}
        with:
          files: ./lcov.info
          flags: unittests
          name: codecov-umbrella
      - name: Coveralls
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.type == 'regular' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
